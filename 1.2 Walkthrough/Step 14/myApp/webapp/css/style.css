/*We create a folder css which will contain our CSS files.
In a new style definition file inside the css folder we create our custom classes combined with a custom namespace class.
This makes sure that the styles will only be applied on controls that are used within our app.
A button has a default margin of 0 that we want to override:
We add a custom margin of 2px (or 0.125rem calculated relatively to the default font size of 16px) to the button
with the style class myCustomButton. We add the CSS class sapMBtn to make our selector more specific:
in CSS, the rule with the most specific selector "wins".
For right-to-left (rtl) languages, like Arabic, you set the left margin and reset the right margin as the app display is inverted.
If you only use standard SAPUI5 controls, you don't need to care about this, in this case where we use custom CSS, you have to add this information.
In an additional class myCustomText we define a bold text and set the display to inline-block.
This time we just define our custom class without any additional selectors. We do not set a color value here yet, we will do this in the view.*/

html[dir="ltr"] .myAppDemoWT .myCustomButton.sapMBtn {
   margin-right: 0.125rem
}

html[dir="rtl"] .myAppDemoWT .myCustomButton.sapMBtn {
   margin-left: 0.125rem
}

.myAppDemoWT .myCustomText {
   display: inline-block;
   font-weight: bold;
}